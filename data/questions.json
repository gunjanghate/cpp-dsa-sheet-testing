[
  {
    "question": "What is the time complexity of binary search?",
    "options": ["O(n)", "O(log n)", "O(n log n)", "O(1)"],
    "answer": "O(log n)"
  },
  {
    "question": "Which data structure uses LIFO?",
    "options": ["Queue", "Heap", "Stack", "Tree"],
    "answer": "Stack"
  },
  {
    "question": "Which data structure is used for implementing recursion?",
    "options": ["Queue", "Stack", "Linked List", "Graph"],
    "answer": "Stack"
  },
  {
    "question": "What is the worst-case time complexity of quicksort?",
    "options": ["O(n)", "O(n log n)", "O(n^2)", "O(log n)"],
    "answer": "O(n^2)"
  },
  {
    "question": "Which of the following is not a stable sorting algorithm?",
    "options": ["Merge Sort", "Bubble Sort", "Insertion Sort", "Quick Sort"],
    "answer": "Quick Sort"
  },
  {
    "question": "Which data structure is best suited for implementing a priority queue?",
    "options": ["Heap", "Stack", "Queue", "Array"],
    "answer": "Heap"
  },
  {
    "question": "In a max-heap, the root node is always:",
    "options": ["The minimum element", "The maximum element", "The median element", "None of the above"],
    "answer": "The maximum element"
  },
  {
    "question": "Which graph traversal algorithm uses a queue?",
    "options": ["Depth First Search", "Breadth First Search", "Dijkstra's Algorithm", "Prim's Algorithm"],
    "answer": "Breadth First Search"
  },
  {
    "question": "What is the space complexity of merge sort?",
    "options": ["O(1)", "O(log n)", "O(n)", "O(n log n)"],
    "answer": "O(n)"
  },
  {
    "question": "Which of the following is a self-balancing binary search tree?",
    "options": ["Binary Heap", "AVL Tree", "Trie", "Graph"],
    "answer": "AVL Tree"
  },
  {
    "question": "What is the best case time complexity of bubble sort?",
    "options": ["O(n)", "O(n log n)", "O(n^2)", "O(log n)"],
    "answer": "O(n)"
  }
]